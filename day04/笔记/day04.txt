1.前后端处理JSON
  1.后端处理
    import json
    json.dumps(列表|元组|字典)

    class Model(db.Model):
        ....
        def to_dict(self):
            dic = {
                ....
            }
            return dic
  2.前端处理
    var jsonObj = JSON.parse(JSON串)
2.JQ 对 ajax 支持
  1.$obj.load()
    语法:
      $obj.load(url,data,callback)
  2.$.get()
    语法:
      $.get(url,data,callback,type)
        $.get('/server', function(data){
            data 就是 JSON 格式
        },'json')
  3.$.post()
========================================================================
1.JQ 对 ajax 的支持
  1.$.ajax()
    语法: $.ajax({请求参数的JSON对象})
      参数对象中的属性:
        1.url : 字符串,表示异步请求的地址
        2.type : 字符串,请求方式, get 或 post
        3.data : 传递到服务器端的参数
          可以是字符串 : "name=sf.zh&age=18"
          也可以是 JSON 对象:
          {
            "name" : "sf.zh",
            "age" : 18
          }
        4.dataType : 字符串,响应回来的数据的格式
          1. 'html'
          2. 'xml'
          3. 'text'
          4. 'script'
          5. 'json'
          6. 'jsonp' : 有关跨域的响应格式
        5.success:回调函数,请求和响应成功时回来执行的操作
        ================================================
        6.error : 回调函数, 请求或响应失败时回来执行的操作
        7.beforeSend : 回调函数,发送ajax请求之前执行的操作,如果 return false,则终止请求发送
2.跨域(Cross Domain)
  1.什么是跨域
    HTTP协议中有一个策略 - "同源策略"
      同源:多个地址中,相同的协议,相同的域名,相同的端口被视为是"同源"
      在HTTP中,必须是同源地址才能互相发送请求,非同源拒绝请求(<script>和<img>除外).

      http://www.tedu.cn/a.html
      http://www.tedu.cn/b.html
      以上地址是 "同源"

      http://www.tedu.cn/a.html
      https://www.tedu.cn/b.html
      由于 协议不同, 所以不是 "同源"

      http://localhost/a.html
      http://127.0.0.1/a.html
      由于 域名不同, 所以不是 "同源"

      http://www.tedu.cn:80/a.html
      http://www.tedu.cn:8080/a.html
      由于 端口不同,所以不是 "同源"
    跨域: 非同源的网页,相互发送请求的过程,就是跨域
  2.解决方案
    通过 <script> 向服务器资源发送一个请求,由服务器资源指定前端页面的哪个方法来执行响应的数据
  3.jQuery 的跨域
    jsonp - json with padding

    $.ajax({
        url: "xxx",
        type: "get",
        dataType: "jsonp",  // 指定为跨域访问
        jsonp: "callback",  // 定义列callback的参数名,以便获取callback传递过去的函数名
        jsonpCallback: "xxx"  // 定义jsonp的回调函数名
    });



